{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3648c7d8.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li onClick={props.signOut}>\n        <NavLink to=\"/signin\" onClick={props.signOut}>\n          Log Out\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating green lighten-2\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          })\n          .then(() => {\n            dispatch({ type: \"SIGNUP_SUCCESS\" });\n          })\n          .catch(err => {\n            dispatch({ type: \"SIGNUP_ERROR\", err });\n          });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Super Hero Support Group\n        </Link>\n        {auth.isLoaded && links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n    return (\n      <div className=\"section\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Notification</span>\n            <ul className=\"notifications\">\n              { notifications && notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                )\n              }) }\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary \">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: ['createAt', 'desc']  },\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n  console.log(\"PROJECT\", project);\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"container center\">Loading Project...</div>;\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\"\n    }\n  ])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text darken-text-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-2 z-depth-0\">Login</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => {\n      dispatch(signIn(creds));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-2 z-depth-0\">Sign Up</button>\n            {/* <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text darken-text-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <input type=\"text\" id=\"content\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-2 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make an async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project: project });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"Sign out success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"Signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"Signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  // projects: [\n  //   {\n  //     id: 1,\n  //     title: \"Help me find my missing hammer\",\n  //     content:\n  //       \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid unde, officia aliquam quasi iure fugit et delectus ex ipsam tempora modi excepturi, voluptate amet consectetur id voluptas suscipit vero quidem!\"\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"I want to be able to set my schedule\",\n  //     content:\n  //       \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid unde, officia aliquam quasi iure fugit et delectus ex ipsam tempora modi excepturi, voluptate amet consectetur id voluptas suscipit vero quidem!\"\n  //   },\n  //   {\n  //     id: 3,\n  //     title: \"Iron suit is rusting\",\n  //     content:\n  //       \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid unde, officia aliquam quasi iure fugit et delectus ex ipsam tempora modi excepturi, voluptate amet consectetur id voluptas suscipit vero quidem!\"\n  //   }\n  // ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERR\":\n      console.log(\"create project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAjzK4PL0sZ9YXkhCXxJ2M7ZdX7WiSdecI\",\n  authDomain: \"react-redux-firebase-732ae.firebaseapp.com\",\n  databaseURL: \"https://react-redux-firebase-732ae.firebaseio.com\",\n  projectId: \"react-redux-firebase-732ae\",\n  storageBucket: \"react-redux-firebase-732ae.appspot.com\",\n  messagingSenderId: \"876900563357\",\n  appId: \"1:876900563357:web:155c603dfb8844e7805774\",\n  measurementId: \"G-9BLTMNH2YY\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n// firebase.firestore().settings({ timestampsInSnapshots: true }); // This line not needed anymore video 15 comments \n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance, getFirestore , reduxFirestore} from \"redux-firestore\"; // add reduxFirestore\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n// import { reduxFirestore } from \"redux-firestore\";\n// import { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n\n// Testing this - it should be in fbConfig\n\n// // Your web app's Firebase configuration\n// const config = {\n//   apiKey: \"AIzaSyAjzK4PL0sZ9YXkhCXxJ2M7ZdX7WiSdecI\",\n//   authDomain: \"react-redux-firebase-732ae.firebaseapp.com\",\n//   databaseURL: \"https://react-redux-firebase-732ae.firebaseio.com\",\n//   projectId: \"react-redux-firebase-732ae\",\n//   storageBucket: \"react-redux-firebase-732ae.appspot.com\",\n//   messagingSenderId: \"876900563357\",\n//   appId: \"1:876900563357:web:155c603dfb8844e7805774\",\n//   measurementId: \"G-9BLTMNH2YY\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(config);\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig), // - v17 comments\n    // reduxFirestore(config)\n    // reactReduxFirebase(fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\nconst rrfProps = {\n  firebase,\n  // config: fbConfig,\n  config: rrfConfig, // fbConfig - v17 comments\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}